# -*- coding: utf-8 -*-
"""
Created on Thu Oct 17 00:59:41 2019

@author: niili

Дано описание наследования классов исключений в следующем формате.
<имя исключения 1> : <имя исключения 2> <имя исключения 3> ... 
                                                            <имя исключения k>
Это означает, что исключение 1 наследуется от исключения 2, исключения 3, 
и т. д.

В первой строке входных данных содержится целое число n - число классов 
исключений.

В следующих n строках содержится описание наследования классов. В i-й строке 
указано от каких классов наследуется i-й класс. Класс может ни от кого не 
наследоваться. Гарантируется, что класс не наследуется сам от себя (прямо или 
косвенно), что класс не наследуется явно от одного класса более одного раза.

В следующей строке содержится число m - количество обрабатываемых исключений.
Следующие m строк содержат имена исключений в том порядке, в каком они были 
написаны в коде.
Гарантируется, что никакое исключение не обрабатывается дважды.

Вывести в отдельной строке имя каждого исключения, обработку которого можно 
удалить из кода, не изменив при этом поведение программы. Имена следует 
выводить в том же порядке, в котором они идут во входных данных.


Типы исключений не созданы.
Создавать классы исключений также не требуется


Структура исключений хранится в словаре, где ключ - имя исключения, а 
значение - список предков.

Прошрама читает структуру исключений, затем в цикле читаетсписок использованных
исключений и сразу проверяет использовались ли ранее его предки.
"""

#------------------------------------------------------------------------------

# читаем n
try:
    n_exception = int(input())
except ValueError:
    print("Value Error. Please try again!")
    n_exception = int(input())
#------------------------------------------------
# словарь для структуры исключений
except_dict = dict()
for i in range(n_exception):
    # читаем строку
    except_name = input()
    # если в ней есть :, то исключение унаследовано от других исключений
    if ':' in  except_name:
        # разделяем имя исключения и его предков
        except_name, except_parents = except_name.split(" :")
        # формируем список предков
        except_parents = except_parents.split()
    # если : не было
    else:
        # то список предков пуст
        except_parents = []
    # добавляем исключение в словарь
    except_dict[except_name] = except_parents

#------------------------------------------------    
# читаем количество использованных исключений
try:
    m_exception = int(input())
except ValueError:
    print("Value Error. Please try again!")
    m_exception = int(input()) 

#------------------------------------------------
# список использованных исключений
exception_list = []
for i in range(m_exception):
    # читаем исключение
    exc = input()
    for j in except_dict[exc]:
        if j in exception_list:
            print(exc)
            break
    exception_list.append(exc)

