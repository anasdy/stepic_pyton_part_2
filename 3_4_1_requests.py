# -*- coding: utf-8 -*-
"""
Created on Mon Feb 24 08:14:42 2020

@author: niili


Рассмотрим два HTML-документа A и B.
Из A можно перейти в B за один переход, если в A есть ссылка на B, т. е. внутри
A есть тег <a href="B">, возможно с дополнительными параметрами внутри тега.
Из A можно перейти в B за два перехода если существует такой документ C, что из
 A в C можно перейти за один переход и из C в B можно перейти за один переход.

Вашей программе на вход подаются две строки, содержащие url двух документов A и
 B.
Выведите Yes, если из A в B можно перейти за два перехода, иначе выведите No.

Обратите внимание на то, что не все ссылки внутри HTML документа могут вести на
существующие HTML документы.

"""
#------------------------------------------------------------------------------

import requests


#------------------------------------------------------------------------------



#------------------------------------------------------------------------------
# read A and B URL
a_url = input()
b_url = input()

# get A
res_a = requests.get(a_url)
if res_a.status_code != 200:
    print("Error open URL ", a_url, "with code ", res_a.raise_for_status())
else:
    print(res_a.text)
    print(res_a.links)




Ребятки, алгоритм тут довольно простой, если подумать:
1. Скачивание страницы a (тут проверять на 404 или на исключения и если произошло -- No)

2. Разбор страницы a и сбор ссылок sub_url в ней (лучший способ использую lxml и xpath запрос "//a/@href", который собирает все значения атрибута href у тегов a на странице и возвращает список строк)

3. В цикле перебираем sub_url и пытаемся их скачать (не забудьте проверять 404 и ловить исключения, только в данном случае не нужно сразу No говорить -- можем не перебрать все ссылки)

4. На странице sub_url ищем ссылку на b, если нашли прерываем циклы и пишем Yes, если не нашли -- перебираем дальше. Если же после перебора sub_url не нашлось ни одной ссылки пишем No




Обошёлся без регулярных выражений. Потребовались следующие модули:
import lxml.html
import requests

Использовать можно так:
html = lxml.html.document_fromstring(content)
for a in html.iter('a'):
    list_links.append(a.get('href')) #  в этом списке у нас и появятся ссылки.
