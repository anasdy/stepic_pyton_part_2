# -*- coding: utf-8 -*-
"""
Created on Fri Aug  2 19:09:46 2019

@author: niili

Реализуйте класс MoneyBox, для работы с виртуальной копилкой.

Каждая копилка имеет ограниченную вместимость, которая выражается целым 
числом – количеством монет, которые можно положить в копилку. Класс должен 
поддерживать информацию о количестве монет в копилке, предоставлять возможность
добавлять монеты в копилку и узнавать, можно ли добавить в копилку ещё какое-то
количество монет, не превышая ее вместимость.

Класс должен иметь следующий вид

class MoneyBox:
    def __init__(self, capacity):
        # конструктор с аргументом – вместимость копилки

    def can_add(self, v):
        # True, если можно добавить v монет, False иначе

    def add(self, v):
        # положить v монет в копилку

При создании копилки, число монет в ней равно 0.
Примечание:
Гарантируется, что метод add(self, v) будет вызываться только если 
can_add(self, v) – True﻿.

"""

class MoneyBox:
    
    # конструктор с аргументом – вместимость копилки
    def __init__(self, capacity):
        self.capacity = capacity
        self.money = 0
        
    # True, если можно добавить v монет, False иначе
    def can_add(self, v):
        if self.capacity >= self.money + v:
            return True
        else:
            return False
        
    # положить v монет в копилку
    def add(self, v):
        self.money += v