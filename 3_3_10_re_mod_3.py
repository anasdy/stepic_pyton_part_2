# -*- coding: utf-8 -*-
"""
Created on Mon Dec 23 23:04:38 2019

@author: niili

Вам дана последовательность строк.
Выведите строки, содержащие двоичную запись числа, кратного 3.

Примечание 2:
﻿Данная задача очень просто может быть решена приведением строки к целому числу 
и проверке остатка от деления на три, но мы все же предлагаем вам решить ее, 
не используя приведение к числу.


Сама я решение не придумала, а нашла. К тому же, разобраться с автоматом я 
тоже не смогла (самый дельный нарисован в комментариях к задаче на степик), 
пришлось просить Сережу. Зато вспомнила про теорему перевода автоматов в 
регулярный выражения.
"""

import re
import sys

pattern = r'(0*(11)*(101*01)*)*'

"""
for line in sys.stdin:
    line = line.rstrip()
    match_obj = re.fullmatch(pattern,line)
    if match_obj != None:
        print(line)
"""        
#   For check regular expression
line = input().rstrip()
match_object = re.fullmatch(pattern ,line)
print(match_object)



Вероятно этот комментария со степик относиться ко мне, но как это применить... 
совсем голова не соображает
Использовал картинку автомата из других постов.

Сначала получилось логически правильное выражение с тремя группами и вот это:

[+] Test #1. OK [ ]

Test #2. Time limit exceeded

нужно логическое ИЛИ, чтобы сократить одну группу и длину выражения

результат: 14 символов
