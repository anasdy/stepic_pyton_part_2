# -*- coding: utf-8 -*-
"""
Created on Tue Sep  3 20:32:12 2019

@author: niili

Программа отвечает на запросы яявляется ли один класс предком другого.
Создавать классы не требуется.

Класс A является предком класса B, если

    A = B;
    A - прямой предок B
    существует такой класс C, что C - прямой предок B и A - предок C

В первой строке входных данных содержится целое число n - число классов.

В следующих n строках содержится описание наследования классов. В i-й строке 
указано от каких классов наследуется i-й класс. Обратите внимание, что класс 
может ни от кого не наследоваться. Гарантируется, что класс не наследуется сам 
от себя (прямо или косвенно), что класс не наследуется явно от одного класса 
более одного раза.

В следующей строке содержится число q - количество запросов.

В следующих q строках содержится описание запросов в формате <имя класса 1> 
<имя класса 2>.
Имя класса – строка, состоящая из символов латинского алфавита, длины не более 
50.

Для каждого запроса выведите в отдельной строке слово "Yes", если класс 1 
является предком класса 2, и "No", если не является. 



Пример воода:
4
A
B : A
C : A
D : B C
4
A B
B D
C D
D A


Пример выводаЖ
Yes
Yes
Yes
No


Структура наследования классов хорошо представляется графом, в python граф 
удобно представлять списками и матрицами смежности, либо использовать готовые 
библиотеки. 
Я попробую два варианта решения:   
    1 - самостоятельная реализация, 
    2 - использование библиотеки python-graph 
        (https://github.com/Shoobx/python-graph)

Вариант1.
Данное решение - вариант списков смежности.
Структура данных: словарь. Где ключ - имя класса, значение - список предков.
Поиск предков осуществляется рекурсивной функцией.


"""

